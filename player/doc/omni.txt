# Mode
[F1] File Browser
[F2] Editor
[F3] Prompt

## File Browser
[Down Arrow] -             Next entry
[Up Arrow] -               Previous entry
[Enter *directory*] -      Change current directory
[Enter *file*] -           Open in editor

## Editor
[Enter] -                  New line
[Backspace] -              Delete

## Prompt
`*command* *argument* ...`

[Enter]     -              Run
[Backspace] -              Delete

# Display
[Left Mouse Button] -      Pan camera
[Scroll Wheel]      -      Zoom

# Command
`open` -    Open file in editor
`new` -     Create new file
`new_dir` - Create new directory
`save` -    Write buffer to disk
`del` -     Delete file
`rename` -  Change file name
`copy` -    Duplicate file
`set` -     Reset level
`next` -    Proceed to next available level
`run`  -    Execute
`quit` -    Exit

`import omni`

# Data
`omni.data`

# Vehicles
## Crane
`._data` - Data
`._loc` - Location

### Navigation
`.zoom(delta)` - Move forward, back
`.pan(delta)` -  Move head right, left
`.ped(delta)` -  Move head up, down

`.grab()` - Grab, insert container

## Truck
This allows for complete freedom of movement without being restricted to an axis.

`._data` - Data
`._loc` - Location

### Navigation
`.mv(delta)` -   Move forward, back

`.turn(delta)` - Turn left, right

## Ship
`zoom(delta)` - Move forward, back

`._data` - Data
`._loc` -  Location

# Data
Data sets can be accessed by key.

`state`
`other_state`

Data and offset is provided.

`.data`
	`._data`
	`._loc`

In the case of arrays, size is provided.

	`._data`
		`._x` - Size (X)
		`._y` - Size (Y)
		`._z` - Size (Z)

Both initial and the desired state is provided.

`.goal`

# Bounds
Bounds are provided.

`.bounds`
	`.area`
	`.rng`

Area-based bounds from cones are provided in `.area`, and range-based bounds providing limits are provided in `rng`.

These can be used to assert that colissions do not occur.
