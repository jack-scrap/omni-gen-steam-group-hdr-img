# Classes
Classes are templates for creating objects.

This can be used to effectively create a new type.

The following defines a class.

```
class Parent:
	def __init__(self):
		...
```

The following creates an object that adheres to that class.

```
class Parent:
	def __init__(self):
		...

obj = Parent()
```

## Constructor
The "constructor" is a function of special function that runs on creation of an object.

It is defined as `__init__`, taking exactly one variable of the name `self`.

```
class Parent:
	def __init__(self):
		...
```

This function is created implicitly, and does not need to be specified should it be the same as the one provided.

## Methods
"Methods" are functions scoped to an object.

Defining methods simply requires writing them in the function body.

```
class Parent:
	def fn(self):
		print('Text')
```

## Local variables
Variables local to a function must be defined in the constructor.

Doing so requires usage of the `self` variable.

### self
This `self` variable describes object being created.

Setting of these attributes will

```
class Parent:
	def __init__(self):
		self.var = 3

obj = Parent()

print(obj.var)
```
