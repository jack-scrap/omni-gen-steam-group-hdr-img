The following will run you through process of "literals"

Literals are the fundamental piece, and will not be evaluated beyond their initial.

# Booleans
`False`
`True`

# Numbers
`3`

## Decimal precision
To give a number precision beyond an integer, add the dot operator.

`3.7`

# Arrays
`[3, 7, 12]`

Every entry in a collection must be of the same type.

# Characters
Characters are single characters.

`'a'`

# Strings
Characters are arrays of characters.

This can be used to effectively create collections of text.

`"Buffer, other buffer"`

# Dictionaries
Objects are collections of data where each entry is a "key" and a "value".

This can be used to effectively create identifiers.

```
{
	'attr': 3,
	'other_attr': 7
}
```

# None
The value `None` represents a non-existent value.

This allows for the creation of variables without assigning a value.
